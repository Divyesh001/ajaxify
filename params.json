{"name":"Ajaxify","tagline":"Vanilla javascript Ajax library with similar syntax like jQuery","body":"# Ajaxify\r\n\r\nThis is a vanilla Javascript AJAX library. The syntax is similar to jQuery.\r\n\r\n### Supported data types:\r\n\r\n - JSON\r\n - Document\r\n - Text\r\n - XML\r\n - Blob\r\n - ArrayBuffer\r\n - No JSONP support, sorry. Use CORS!\r\n\r\n# How to use:\r\n\r\n### FormData\r\n    var formData = new FormData();\r\n    formData.append('da', 'da=da&asd=dsa');\r\n    formData.append('id', 123456);\r\n\r\n    ajaxify.ajax({\r\n        url: 'test.php',\r\n        method: \"POST\",\r\n        data: formData,\r\n        dataType: \"text\",\r\n        processData: false,\r\n        contentType: false,\r\n        headers: {\r\n            \"my-Awes0mE-H3ad3R\": \"header4e\"\r\n        }\r\n    }).done(function (response, headers, XHR) {\r\n        console.log(response);\r\n        console.log(headers);\r\n        console.log(XHR);\r\n    });\r\n\r\n### Array\r\n\r\n    var arr = [10, 20, 30, 'yes', 'no'];\r\n\r\n    ajaxify.ajax({\r\n        url: 'test.php',\r\n        method: \"POST\",\r\n        data: arr,\r\n        headers: {\r\n            \"my-Awes0mE-H3ad3R\": \"header4e\"\r\n        }\r\n    }).done(function (response, headers, XHR) {\r\n        console.log(response);\r\n        console.log(headers);\r\n        console.log(XHR);\r\n    });\r\n\r\n### Text\r\n\r\n    var t = \"yes=thisisatext&nothisisnotatext\";\r\n\r\n    ajaxify.ajax({\r\n        url: 'test.php',\r\n        method: \"POST\",\r\n        data: t,\r\n        headers: {\r\n            \"my-Awes0mE-H3ad3R\": \"header4e\"\r\n        }\r\n    }).done(function (response, headers, XHR) {\r\n        console.log(response);\r\n        console.log(headers);\r\n        console.log(XHR);\r\n    });\r\n\r\n### Object\r\n\r\n    var obj = {\r\n        yes: 'thisIsCamelCase'\r\n    };\r\n\r\n    ajaxify.ajax({\r\n        url: 'test.php',\r\n        method: \"POST\",\r\n        data: obj,\r\n        headers: {\r\n            \"my-Awes0mE-H3ad3R\": \"header4e\"\r\n        }\r\n    }).done(function (response, headers, XHR) {\r\n        console.log(response);\r\n        console.log(headers);\r\n        console.log(XHR);\r\n    });\r\n\r\n\r\n### XML\r\n\r\n####### From PHP file. The script will return plain text, which we parse as XML document\r\n    ajaxify.ajax({\r\n        url: 'test.php',\r\n        method: \"GET\",\r\n        headers: {\r\n            \"my-Awes0mE-H3ad3R\": \"header4e\"\r\n        }\r\n    }).done(function (response, headers, XHR) {\r\n        console.log(ajaxify.parseXML(response));\r\n        console.log(headers);\r\n        console.log(XHR);\r\n    });\r\n\r\n####### Directly from XML file. The script will return an XML object\r\n    ajaxify.ajax({\r\n        url: 'test.xml',\r\n        method: \"GET\",\r\n        headers: {\r\n            \"my-Awes0mE-H3ad3R\": \"header4e\"\r\n        }\r\n    }).done(function (response, headers, XHR) {\r\n        console.log(response);\r\n        console.log(headers);\r\n        console.log(XHR);\r\n    });\r\n\r\n### Blob\r\n    ajaxify.ajax({\r\n        url: 'ajax-icon-big.jpg',\r\n        responseType: 'blob',\r\n        method: \"GET\",\r\n        headers: {\r\n            \"my-Awes0mE-H3ad3R\": \"header4e\"\r\n        }\r\n    }).done(function (response, headers, XHR) {\r\n        ajaxify.parseBlob(response, 'image/jpeg', '', true);\r\n    });\r\n\r\n### ArrayBufer\r\n    ajaxify.ajax({\r\n        url: 'ajax-application-development.jpg',\r\n        responseType: 'arraybuffer',\r\n        method: \"GET\",\r\n        headers: {\r\n            \"my-Awes0mE-H3ad3R\": \"header4e\"\r\n        }\r\n    }).done(function (response, headers, XHR) {\r\n        ajaxify.parseArrayBuffer(response, 'image/jpeg', '#asd', true);\r\n    });\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}